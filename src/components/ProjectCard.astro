---
// src/components/ProjectCard.astro

export type ProjectStatus = "Finalizado" | "Por pulir" | "En desarrollo";
export interface Props {
  title: string;
  description: string;
  tech: string[];
  url?: string;
  iframe?: string;
  private?: boolean;
  video?: string;
  imageUrl?: string;
  repoGithub?: string;
  status?: ProjectStatus;
  privateKey?: string;
}

const {
  title,
  description,
  tech,
  url,
  iframe,
  private: isPrivate,
  video,
  imageUrl,
  repoGithub,
  status,
  privateKey,
} = Astro.props as Props;

const statusClass = {
  Finalizado: "bg-green-100 text-green-800",
  "Por pulir": "bg-yellow-100 text-yellow-800",
  "En desarrollo": "bg-blue-100 text-blue-800",
};

const statusBadgeClass = status
  ? statusClass[status] || "bg-gray-100 text-gray-800"
  : "bg-gray-100 text-gray-800";

const safeId = title
  .toLowerCase()
  .replace(/\s+/g, "-")
  .replace(/[^\w-]/g, "");

  const handleAccess = (safeId:string, privateKey:string) => {
   const keyInput = document.querySelector(`#input-key-${safeId}`) as HTMLInputElement
   const key = keyInput?.value || "";

   if(key === privateKey) {
    localStorage.setItem(`access-${safeId}`, "true")
    const protectedBlock = document.querySelector(`#protected-${safeId}`) as HTMLElement | null
    const iframeBlock = document.querySelector(`#iframe-content-${safeId}`) as HTMLElement | null

   if (protectedBlock && iframeBlock) {
      protectedBlock.style.display = "none";
      iframeBlock.style.display = "block";
    }
  } else {
    const oldMsg = document.getElementById(`error-msg-${safeId}`);
    if (oldMsg) oldMsg.remove();

    // Crea el mensaje de error
    const errorMsg = document.createElement("div");
    errorMsg.id = `error-msg-${safeId}`;
    errorMsg.textContent = "Clave incorrecta";
    errorMsg.style.position = "absolute";
    errorMsg.style.top = "12px";
    errorMsg.style.right = "12px";
    errorMsg.style.background = "#f87171";
    errorMsg.style.color = "white";
    errorMsg.style.padding = "8px 16px";
    errorMsg.style.borderRadius = "8px";
    errorMsg.style.fontWeight = "bold";
    errorMsg.style.zIndex = "100";

    // Añade el mensaje al wrapper del iframe
    const wrapper = document.getElementById(`iframe-wrapper-${safeId}`);
    if (wrapper) wrapper.appendChild(errorMsg);

    // Elimina el mensaje tras 2 segundos
    setTimeout(() => {
      errorMsg.remove();
    }, 2000);
  }
};
---

<div class="bg-gray-100 p-6 rounded-xl shadow-md text-left relative dark:bg-gradient-to-b dark:from-purple-950 dark:via-gray-950 dark:to-purple-950">
  <div class="flex items-center justify-between">
    <h3 class="text-xl font-semibold text-purple-700 dark:text-white">{title}</h3>

    {
      status && (
        <div
          class={`mt-1 inline-block px-3 py-1 rounded-full text-xs font-semibold ${statusBadgeClass}`}
        >
          {status}
        </div>
      )
    }
  </div>

  <p class="text-gray-700 mt-2 dark:text-white">{description}</p>

  <div class="mt-4 flex flex-wrap gap-2">
    {
      tech.map((t) => (
        <span class="bg-purple-100 text-purple-800 px-2 py-1 rounded text-sm dark:bg-purple-950 dark:text-purple-400">
          {t}
        </span>
      ))
    }
  </div>

  {
    url && (
      <a
        href={url}
        target="_blank"
        class="mt-4 inline-block text-purple-600 underline text-sm"
      >
        Ver proyecto online
      </a>
    )
  }
  {
  iframe && (
    isPrivate ? (
      <div class="mt-4" id={`iframe-wrapper-${safeId}`}>
        <div id={`protected-${safeId}`} class="bg-white border border-gray-300 p-4 rounded dark:bg-purple-950 dark:border-gray-700">
          <p class="text-sm mb-2 text-gray-700 dark:text-white">
            Este proyecto es privado. Introduce la clave para verlo:
          </p>
          <input
            type="password"
            placeholder="Clave de acceso"
            id={`input-key-${safeId}`}
            class="border border-gray-300 px-3 py-1 rounded w-full text-sm"
          />
          <button
            class="mt-2 bg-purple-600 text-white px-4 py-1 rounded text-sm hover:bg-purple-700 cursor-pointer transition-colors"
            onclick={`(function(){
              const key = document.getElementById('input-key-${safeId}').value;
              if (key === '${privateKey}') {
                localStorage.setItem('access-${safeId}', 'true');
                document.getElementById('protected-${safeId}').style.display = 'none';
                document.getElementById('iframe-content-${safeId}').style.display = 'block';
              } else {
                alert('Clave incorrecta');
              }
            })()`}
          >
            Acceder
          </button>
        </div>

        <div id={`iframe-content-${safeId}`} style="display: none;">
         <iframe
  src={
    iframe.startsWith("https://youtu.be/")
      ? `https://www.youtube.com/embed/${iframe.split("/").pop()}`
      : iframe
  }
  class="w-full h-64 rounded border border-gray-300 mt-2"
  loading="lazy"
  allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture"
  allowfullscreen
  title={`Demo privada de ${title}`}
/>

        </div>

        <script is:inline>
          if (localStorage.getItem('access-{safeId}') === 'true') {
            document.addEventListener('DOMContentLoaded', function () {
              const protectedBlock = document.getElementById('protected-{safeId}');
              const iframeBlock = document.getElementById('iframe-content-{safeId}');
              if (protectedBlock && iframeBlock) {
                protectedBlock.style.display = 'none';
                iframeBlock.style.display = 'block';
              }
            });
          }
        </script>
      </div>
    ) : iframe.endsWith(".mp4") ? (
      <div class="mt-4">
        <video src={iframe} controls class="w-full rounded" />
      </div>
    ) : iframe.startsWith("https://youtu.be/") || iframe.startsWith("https://www.youtube.com/embed/") ? (
      <div x-data="{ open: false }" class="mt-4">
        <div @click="open = true" class="cursor-pointer relative group">
          <iframe
            src={
              iframe.startsWith("https://youtu.be/")
                ? `https://www.youtube.com/embed/${iframe.split("/").pop()}`
                : iframe
            }
            class="w-full h-64 rounded pointer-events-none blur-sm group-hover:blur-0 transition duration-300 border border-gray-300"
            loading="lazy"
            allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture"
            allowfullscreen
            style="position: relative; z-index: 0;"
            title={`Video de YouTube de ${title}`}
          />
          <div class="absolute inset-0 bg-black/20 flex items-center justify-center rounded text-white opacity-0 group-hover:opacity-100 transition z-10">
            <span class="text-sm">Haz clic para ampliar</span>
          </div>
        </div>

        <div
          x-show="open"
          x-transition
          class="fixed inset-0 z-[9999] bg-black/90 flex items-center justify-center p-4"
          style="backdrop-filter: blur(4px);"
        >
          <div class="relative w-full max-w-7xl bg-white rounded-lg shadow-xl overflow-hidden">
            <button
              @click="open = false"
              class="absolute top-2 right-2 text-gray-700 hover:text-gray-900 text-3xl font-bold z-[10000] cursor-pointer"
              aria-label="Cerrar modal"
            >
              ✕
            </button>
            <iframe
              src={
                iframe.startsWith("https://youtu.be/")
                  ? `https://www.youtube.com/embed/${iframe.split("/").pop()}`
                  : iframe
              }
              class="w-full h-[95vh]"
              style="border: none;"
              loading="lazy"
              allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture"
              allowfullscreen
              title={`Video de YouTube de ${title}`}
            />
          </div>
        </div>
      </div>
    ) : (
      <div x-data="{ open: false }" class="mt-4">
        <div @click="open = true" class="cursor-pointer relative group">
          <iframe
            src={iframe}
            class="w-full h-64 rounded pointer-events-none blur-sm group-hover:blur-0 transition duration-300 border border-gray-300"
            loading="lazy"
            style="position: relative; z-index: 0;"
            title={`Iframe de ${title}`}
          />
          <div class="absolute inset-0 bg-black/20 flex items-center justify-center rounded text-white opacity-0 group-hover:opacity-100 transition z-10">
            <span class="text-sm">Haz clic para ampliar</span>
          </div>
        </div>

        <div
          x-show="open"
          x-transition
          class="fixed inset-0 z-[9999] bg-black/90 flex items-center justify-center p-4"
          style="backdrop-filter: blur(4px);"
        >
          <div class="relative w-full max-w-7xl bg-white rounded-lg shadow-xl overflow-hidden">
            <button
              @click="open = false"
              class="absolute top-2 right-2 text-purple-700 hover:text-purple-900 text-3xl font-bold z-[10000] cursor-pointer"
              aria-label="Cerrar modal"
            >
              ✕
            </button>
            <iframe
              src={iframe}
              class="w-full h-[95vh]"
              style="border: none;"
              loading="lazy"
              title={`Iframe de ${title}`}
            />
          </div>
        </div>
      </div>
    )
  )
}

  {
    video && (
      <div class="mt-4">
        <video src={video} controls class="w-full rounded" />
      </div>
    )
  }

  {
    !url && !iframe && !video && imageUrl && (
      <div class="mt-4">
        <img
          src={imageUrl}
          alt={`Captura del proyecto ${title}`}
          class="w-full rounded shadow"
        />
      </div>
    )
  }

  {
    repoGithub && (
      <a
        href={repoGithub}
        target="_blank"
        class="mt-2 inline-block text-sm text-gray-600 underline dark:text-white"
      >
        Ver código en GitHub
      </a>
    )
  }

  {
    !url && !iframe && !video && !imageUrl && (
      <p class="text-sm text-gray-500 mt-4 italic dark:text-white">
        * No hay demo disponible actualmente
      </p>
    )
  }

  {
    isPrivate && (
      <p class="text-xs text-gray-500 mt-2 italic ">
        * Proyecto privado - demo no pública
      </p>
    )
  }
</div>
